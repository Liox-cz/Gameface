version: "3.7"

volumes:
    unit-state:
    postgres-data:

services:
    composer:
        build: .
        image: liox-shop
        volumes:
            - .:/app
        working_dir: /app
        restart: 'no'
        entrypoint: ["composer"]
        command: ["install", "--no-interaction"]

    # Helper service to run database migrations
    db-migrations:
        build: .
        image: liox-shop
        depends_on:
            - postgres
        volumes:
            - .:/app
        working_dir: /app
        command: "bash -c 'wait-for-it postgres:5432 -- sleep 3 && bin/console doctrine:migrations:migrate --no-interaction'"

    web:
        build: .
        image: liox-shop
        volumes:
            - unit-state:/var/lib/unit/state
            - .:/app
            - .docker/nginx-unit:/docker-entrypoint.d
        working_dir: /app
        restart: unless-stopped
        depends_on:
            - composer
        ports:
            - "8080:8080"

    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: liox
            POSTGRES_PASSWORD: liox
            POSTGRES_DB: liox
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - "${LIOX_POSTGRES_PORT:-5432}:5432"

    js-watch:
        image: node:16
        volumes:
            - .:/app
        working_dir: /app
        restart: unless-stopped
        entrypoint: [""]
        command: ["bash", "-c", "npm install && npm run watch"]

    adminer:
        image: adminer:4.8.0
        ports:
            - "${LIOX_ADMINER_PORT:-8000}:8080"
        environment:
            ADMINER_DEFAULT_SERVER: postgres
        depends_on:
            - postgres
